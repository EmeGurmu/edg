Gitbash
unix
C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Git

Regression

from sklearn.linear_model import LinearRegression

lm = LinearRegression()

X = df[['highway-mpg']]
Y = df['price']

lm.fit(X,Y)

Yhat=lm.predict(X)
Yhat[0:5] 

lm.intercept_

lm.coef_

Visualization

import seaborn as sns
%matplotlib inline 
import matplotlib.pyplot as plt

Regression plot

an excellent way to visualize the fit of our model is by using regression plots.

width = 12
height = 10
plt.figure(figsize=(width, height))
sns.regplot(x="highway-mpg", y="price", data=df)
plt.ylim(0,)

Residual Plot
A good way to visualize the variance of the data is to use a residual plot.

width = 12
height = 10
plt.figure(figsize=(width, height))
sns.residplot(x=df['highway-mpg'],y=df['price'])
plt.show()


multiple linear regression model
One way to look at the fit of the model is by looking at the distribution plot.
We can look at the distribution of the fitted values vs distribution of actual values of dependent variable

plt.figure(figsize=(width, height))

ax1 = sns.distplot(df['price'], hist=False, color="r", label="Actual Value")
sns.distplot(Y_hat, hist=False, color="b", label="Fitted Values" , ax=ax1)

plt.title('Actual vs Fitted Values for Price')
plt.xlabel('Price (in dollars)')
plt.ylabel('Proportion of Cars')

plt.show()
plt.close()




